
==================== FINAL INTERFACE ====================
2018-09-20 09:28:43.071123 UTC

interface sum-of-multiples-1.2.0.5-IJMojvQkTAe5LkqgDgUQKi:SumOfMultiples 8043
  interface hash: 4330c47d0183846399f557a921d28af1
  ABI hash: 1c29f92090944a2881e97ff818879db5
  export-list hash: e0cd4194dbe1d436a0e930cce692b974
  orphan hash: e7383311483bbf5f4e43f47c9bc218b8
  flag hash: 8f52f5e5828eb5661f405d8d9ca450ec
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  SumOfMultiples.sumOfMultiples
module dependencies:
package dependencies: array-0.5.2.0 base-4.11.1.0*
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Set.Internal
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Set 7d3c64a641be4cacbcd8119445bab919
import  -/  containers-0.5.11.0:Data.Set.Internal 93fa3ef95853aa2a7aadf32d693bd451
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
c571446ffefe2acc7921e1bca02a6308
  $s$fFoldableSet_$csum1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
2dba6f8a39940284c3dd4f637aded67f
  $s$fFoldableSet_$csum_go3 ::
    GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
f170312db77bea56db6fd4e14cf90cc3
  $s$wsplitS ::
    GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
    -> (# Data.Set.Internal.Set GHC.Integer.Type.Integer,
          Data.Set.Internal.Set GHC.Integer.Type.Integer #)
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [~] -}
f5ebe4663b99886012c1f445a5438612
  $sinsertR_$sgo3 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
3a5d609ba7e79dd8d4af7f4868e84804
  $sinsert_$sgo3 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
38d126bd54433fa8b988684a3d960ca8
  $sunion ::
    Data.Set.Internal.Set GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
fcaa8d5d80b0c53b93eff4ec622814ac
  $sunions_go3 ::
    Data.Set.Internal.Set GHC.Integer.Type.Integer
    -> [Data.Set.Internal.Set GHC.Integer.Type.Integer]
    -> Data.Set.Internal.Set GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
4b0d8452941faaf7ca7bbf33dfddc677
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SumOfMultiples.$trModule3
                   SumOfMultiples.$trModule1) -}
4911a3d52f3fcc065cf4ba061873e040
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SumOfMultiples.$trModule2) -}
6dbac2d46cfc514d00532ee1304a8d21
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SumOfMultiples"#) -}
246e18c2eec59982b309f6581e21dc62
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SumOfMultiples.$trModule4) -}
5d57ab5600f9da085299fac9ea54d8e8
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("sum-of-multiples-1.2.0.5-IJMojvQkTAe5LkqgDgUQKi"#) -}
0934b548ba0cb3a1fbd61d15bec89272
  sumOfMultiples ::
    [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (factors :: [GHC.Integer.Type.Integer])
                   (limit :: GHC.Integer.Type.Integer) ->
                 let {
                   lvl :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.minusInteger
                       limit
                       SumOfMultiples.sumOfMultiples1
                 } in
                 letrec {
                   go :: [GHC.Integer.Type.Integer]
                         -> [Data.Set.Internal.Set GHC.Integer.Type.Integer]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Integer.Type.Integer]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.[] @ (Data.Set.Internal.Set GHC.Integer.Type.Integer)
                       : y ys
                       -> case GHC.Integer.Type.gtInteger#
                                 y
                                 SumOfMultiples.$s$fFoldableSet_$csum1 of wild1 {
                            DEFAULT -> go ys
                            1#
                            -> GHC.Types.:
                                 @ (Data.Set.Internal.Set GHC.Integer.Type.Integer)
                                 (case GHC.Enum.enumDeltaToInteger
                                         SumOfMultiples.$s$fFoldableSet_$csum1
                                         (GHC.Integer.Type.minusInteger
                                            y
                                            SumOfMultiples.$s$fFoldableSet_$csum1)
                                         lvl of wild2 {
                                    [] -> Data.Set.Internal.Tip @ GHC.Integer.Type.Integer
                                    : x0 xs0
                                    -> case x0 of dt { DEFAULT ->
                                       Data.Set.Internal.$wpoly_go
                                         @ GHC.Integer.Type.Integer
                                         1#
                                         (Data.Set.Internal.Bin
                                            @ GHC.Integer.Type.Integer
                                            1#
                                            dt
                                            (Data.Set.Internal.Tip @ GHC.Integer.Type.Integer)
                                            (Data.Set.Internal.Tip @ GHC.Integer.Type.Integer))
                                         xs0 } })
                                 (go ys) } }
                 } in
                 SumOfMultiples.$s$fFoldableSet_$csum_go3
                   SumOfMultiples.$s$fFoldableSet_$csum1
                   (SumOfMultiples.$sunions_go3
                      (Data.Set.Internal.Tip @ GHC.Integer.Type.Integer)
                      (go factors))) -}
9ef418e080834d6cebaf3ada0c24a024
  sumOfMultiples1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
"SPEC/SumOfMultiples $wsplitS @ Integer" [orphan] [0] forall (w :: GHC.Classes.Ord
                                                                     GHC.Integer.Type.Integer)
  Data.Set.Internal.$wsplitS @ GHC.Integer.Type.Integer w
  = SumOfMultiples.$s$wsplitS
"SPEC/SumOfMultiples union @ Integer" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                  GHC.Integer.Type.Integer)
  Data.Set.Internal.union @ GHC.Integer.Type.Integer $dOrd
  = SumOfMultiples.$sunion
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

